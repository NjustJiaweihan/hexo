{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/minima/source/css/custom.css","path":"css/custom.css","modified":0,"renderable":1},{"_id":"themes/minima/source/css/prism-dark.css","path":"css/prism-dark.css","modified":0,"renderable":1},{"_id":"themes/minima/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1},{"_id":"themes/minima/source/css/prism-line-numbers.css","path":"css/prism-line-numbers.css","modified":0,"renderable":1},{"_id":"themes/minima/source/css/skeleton.css","path":"css/skeleton.css","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.eot","path":"fonts/dm-serif-display-v4-latin-regular.eot","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.svg","path":"fonts/dm-serif-display-v4-latin-regular.svg","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.ttf","path":"fonts/dm-serif-display-v4-latin-regular.ttf","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.eot","path":"fonts/inter-v2-latin-regular.eot","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.svg","path":"fonts/inter-v2-latin-regular.svg","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.ttf","path":"fonts/inter-v2-latin-regular.ttf","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff2","path":"fonts/dm-serif-display-v4-latin-regular.woff2","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff","path":"fonts/dm-serif-display-v4-latin-regular.woff","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff","path":"fonts/inter-v2-latin-regular.woff","modified":0,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff2","path":"fonts/inter-v2-latin-regular.woff2","modified":0,"renderable":1},{"_id":"themes/minima/source/images/epic-smiley.jpg","path":"images/epic-smiley.jpg","modified":0,"renderable":1},{"_id":"themes/minima/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/minima/source/images/thumbnail.jpg","path":"images/thumbnail.jpg","modified":0,"renderable":1},{"_id":"themes/minima/source/js/nanobar.min.js","path":"js/nanobar.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"c8dc5a24384f355bb8a695edba477d42da177d81","modified":1639280147211},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1638284566723},{"_id":"source/CNAME","hash":"b8f82bfa28a08ba0afe96062cb9033a2289a783f","modified":1638456155260},{"_id":"source/_posts/springboot-druid.md","hash":"3800a7cc2a1f18559ea0fe4aef661fea44c58fde","modified":1638456155260},{"_id":"source/about/index.md","hash":"e92210a4185aa22620177bc95433074ab7b0b9f1","modified":1639278942038},{"_id":"source/_posts/接口的用武之地.md","hash":"8e7f29765120d3413d03e107eefe5ed791889929","modified":1639237994181},{"_id":"source/work/index.md","hash":"5a9f7e81112f8317819b8ec4a90edfb5a7f4ac28","modified":1639278942038},{"_id":"themes/minima/.gitignore","hash":"824c6bad36ef799350c37bcd0fe5a1a88295d2f8","modified":1638456155279},{"_id":"themes/minima/_config.yml","hash":"39fbe19a132a4e467b5a1686ad94c8a3da7d362a","modified":1639299099090},{"_id":"themes/minima/LICENSE","hash":"d31e0df078ff6f9bc2923196d9aae1cd50516159","modified":1638456155279},{"_id":"themes/minima/README.md","hash":"4dbaa7bb7697a0e984450c1497ad949f3165da9d","modified":1638456155279},{"_id":"themes/minima/layout/archive.ejs","hash":"3ba1f33ed739039930b987b4c0f0977a46d63310","modified":1638456155280},{"_id":"themes/minima/layout/layout.ejs","hash":"7362dec846b67d65bc01f36fa1765cfdf05a3603","modified":1638456155280},{"_id":"themes/minima/layout/page.ejs","hash":"ba59ed3ac4edd762029b31686f2d3b60ef7b943d","modified":1638456155281},{"_id":"themes/minima/layout/post.ejs","hash":"e266b5094b25e7fe72ed5e0f45965aa0443697c7","modified":1639295752090},{"_id":"themes/minima/layout/index.ejs","hash":"6209a7981eb5866e1dcd321e5b66fe228659b9a2","modified":1639293915888},{"_id":"themes/minima/layout/tag.ejs","hash":"c3a378abd79bc5d7b42af801845055e141e80fa1","modified":1638456155283},{"_id":"themes/minima/layout/partial/footer.ejs","hash":"26d867af8ef7d8ed56c5bcafb2bc0b9eb696854a","modified":1639295526142},{"_id":"themes/minima/layout/partial/comments.ejs","hash":"827bced78b4ef972d1b70e4cb5b5171da6b0ed35","modified":1638456155281},{"_id":"themes/minima/layout/partial/google_analytics.ejs","hash":"0f9b2ebd8053e33c2a11976290dca5012f44cd46","modified":1638456155282},{"_id":"themes/minima/layout/partial/header.ejs","hash":"9760ae03ba19b925e5c88d0012e45fc876a18598","modified":1638456155282},{"_id":"themes/minima/layout/partial/pagination.ejs","hash":"bce484c6ec05b3120c1aba49b64cd00b7a0afb2b","modified":1638456155282},{"_id":"themes/minima/layout/partial/tcolor.ejs","hash":"badfacb7abd8ab2e4732777177526a63b9b776f3","modified":1638456155283},{"_id":"themes/minima/source/css/custom.css","hash":"4def307c74d53452191e01241fdaffb69204606c","modified":1638456155284},{"_id":"themes/minima/source/css/normalize.css","hash":"dd1976308129df19afb1a0dfdc9cc5d2aee7aec2","modified":1638456155284},{"_id":"themes/minima/source/css/prism-line-numbers.css","hash":"c632c3fa3fd97d05a0f74c6a87e1e93ee60ee57f","modified":1638456155285},{"_id":"themes/minima/source/css/prism-dark.css","hash":"6eae920ef9ee996f71a88bf2725e6e385d3e8b79","modified":1638456155285},{"_id":"themes/minima/source/css/skeleton.css","hash":"46633c4f03fc8de882077a141775a83f2dd6acc0","modified":1638456155285},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.eot","hash":"7c5138328e9d4d2e231408c00eb879d1508a6f4e","modified":1638456155286},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.svg","hash":"ca639a580d3dd7c1a023d489cd818af95883b52b","modified":1638456155289},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.ttf","hash":"1eaeb5d2d0a01f02cfd1313903b35bcef224d379","modified":1638456155287},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.eot","hash":"b18f1e7b093bf71d833ddfd81676bdfbf165e810","modified":1638456155289},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff2","hash":"c104f19b6f5176eae39be527c43742a236b9ac29","modified":1638456155288},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff","hash":"61692ca29e433827e7c227e7d19a70037ff87273","modified":1638456155288},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.ttf","hash":"d96f19bfb5bd9e7b85f590c20960d0cb8a1fffcd","modified":1638456155290},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff","hash":"7f36fa1af7da1caa31a37e7b96c1772b75494726","modified":1638456155291},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff2","hash":"99ad803462294f0cfce54995572d6caf8d955028","modified":1638456155291},{"_id":"themes/minima/source/images/favicon.png","hash":"7d18666e5a8455f4367b240425d617cf93966e10","modified":1638456155293},{"_id":"themes/minima/source/images/thumbnail.jpg","hash":"80248d23872a62ae51080920487adada35d3f5a2","modified":1638456155294},{"_id":"themes/minima/source/js/nanobar.min.js","hash":"4217a5c94540eead8867cee15c15ce229d00b80e","modified":1639296417061},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.svg","hash":"b650647a506978c3617a12cb50ba3c4c596ee6e7","modified":1638456155287},{"_id":"themes/minima/source/images/epic-smiley.jpg","hash":"11102caf25def291217235fe403c15e9fd40f9e3","modified":1638456155293},{"_id":"public/about/index.html","hash":"5bac4492a249275d0c497a7009630e100f6d65ef","modified":1639279949541},{"_id":"public/work/index.html","hash":"867438c72197bef4682fafea1aa442eb5a0734aa","modified":1639279949541},{"_id":"public/2021/12/02/springboot-druid/index.html","hash":"acd2a3716902f51e62e60b92355232380ba16631","modified":1639295807826},{"_id":"public/2021/11/30/hello-world/index.html","hash":"2d17a7596d18114cf7803d5ae077eddac062c332","modified":1639295807826},{"_id":"public/archives/index.html","hash":"8f9f09f3f6c319efe8f9b4a43ad91b0b743a2016","modified":1639295535727},{"_id":"public/archives/2021/index.html","hash":"eef9b55ca757faad7ed2d5d278aa9ce586c6f8fe","modified":1639295535727},{"_id":"public/archives/2021/11/index.html","hash":"0bbaf64c4e674175074af2244d357c573c04c16e","modified":1639295535727},{"_id":"public/archives/2021/12/index.html","hash":"c67f4bc8afe6c84803ca92d12177542661d37c76","modified":1639295535727},{"_id":"public/2021/12/11/接口的用武之地/index.html","hash":"2eb2eace56a1c0c32a82845b24e5ed4989da2f97","modified":1639279949541},{"_id":"public/index.html","hash":"5235ce0d167d830ca256a56e9b2a1bba30b6375d","modified":1639299110155},{"_id":"public/tags/springboot/index.html","hash":"24fdd72d5eca2065ac5822c13cfbd21be47e16d0","modified":1639295535727},{"_id":"public/tags/DIY/index.html","hash":"fa279afed4306a3fa83389309d043d49c5091766","modified":1639295535727},{"_id":"public/CNAME","hash":"b8f82bfa28a08ba0afe96062cb9033a2289a783f","modified":1639279949541},{"_id":"public/fonts/inter-v2-latin-regular.eot","hash":"b18f1e7b093bf71d833ddfd81676bdfbf165e810","modified":1639279949541},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.eot","hash":"7c5138328e9d4d2e231408c00eb879d1508a6f4e","modified":1639279949541},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.ttf","hash":"1eaeb5d2d0a01f02cfd1313903b35bcef224d379","modified":1639279949541},{"_id":"public/fonts/inter-v2-latin-regular.svg","hash":"ca639a580d3dd7c1a023d489cd818af95883b52b","modified":1639279949541},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.woff2","hash":"c104f19b6f5176eae39be527c43742a236b9ac29","modified":1639279949541},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.woff","hash":"61692ca29e433827e7c227e7d19a70037ff87273","modified":1639279949541},{"_id":"public/fonts/inter-v2-latin-regular.ttf","hash":"d96f19bfb5bd9e7b85f590c20960d0cb8a1fffcd","modified":1639279949541},{"_id":"public/fonts/inter-v2-latin-regular.woff","hash":"7f36fa1af7da1caa31a37e7b96c1772b75494726","modified":1639279949541},{"_id":"public/fonts/inter-v2-latin-regular.woff2","hash":"99ad803462294f0cfce54995572d6caf8d955028","modified":1639279949541},{"_id":"public/images/favicon.png","hash":"7d18666e5a8455f4367b240425d617cf93966e10","modified":1639279949541},{"_id":"public/images/thumbnail.jpg","hash":"80248d23872a62ae51080920487adada35d3f5a2","modified":1639279949541},{"_id":"public/css/normalize.css","hash":"dd1976308129df19afb1a0dfdc9cc5d2aee7aec2","modified":1639279949541},{"_id":"public/css/prism-line-numbers.css","hash":"c632c3fa3fd97d05a0f74c6a87e1e93ee60ee57f","modified":1639279949541},{"_id":"public/css/custom.css","hash":"4def307c74d53452191e01241fdaffb69204606c","modified":1639279949541},{"_id":"public/css/prism-dark.css","hash":"6eae920ef9ee996f71a88bf2725e6e385d3e8b79","modified":1639279949541},{"_id":"public/css/skeleton.css","hash":"46633c4f03fc8de882077a141775a83f2dd6acc0","modified":1639279949541},{"_id":"public/js/nanobar.min.js","hash":"4217a5c94540eead8867cee15c15ce229d00b80e","modified":1639298026352},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.svg","hash":"b650647a506978c3617a12cb50ba3c4c596ee6e7","modified":1639279949541},{"_id":"public/images/epic-smiley.jpg","hash":"11102caf25def291217235fe403c15e9fd40f9e3","modified":1639279949541},{"_id":"source/Works/index.md","hash":"5a9f7e81112f8317819b8ec4a90edfb5a7f4ac28","modified":1639278942038},{"_id":"source/About/index.md","hash":"37994505af951fbb0ae0f11f0a99293534d188d7","modified":1639299906705},{"_id":"source/_posts/mock-consumer-helper.md","hash":"8e7f29765120d3413d03e107eefe5ed791889929","modified":1639237994181},{"_id":"source/_posts/.DS_Store","hash":"b252f8a240f6aa7049b3c5f68d28a0bda238751a","modified":1639280050774},{"_id":"public/Works/index.html","hash":"14aaafe422ce86e9dea4afc6182a8d4235a93670","modified":1639295535727},{"_id":"public/About/index.html","hash":"c39a0f29ce980052a045b70f9119eb9efd307de2","modified":1639299920901},{"_id":"public/2021/12/11/mock-consumer-helper/index.html","hash":"09c3b7e2efda5523fcefe53ffef2cad1fbd6d5f6","modified":1639295807826},{"_id":"themes/minima/layout/.DS_Store","hash":"ca6062d92788d921efdcfd33a662dd7bd3ea6fbf","modified":1639280423804},{"_id":"themes/minima/.DS_Store","hash":"1eda83974a4240b0ce3825d36c3d0f469700508d","modified":1639280428817},{"_id":"themes/minima/source/.DS_Store","hash":"f581997d66eced683d70ad3352d3cf7202125ee4","modified":1639280442428},{"_id":"source/About/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1639289754807}],"Category":[],"Data":[],"Page":[{"title":"work","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\nWork0\n","source":"Works/index.md","raw":"---\ntitle: work\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\nWork0\n","date":"2021-12-12T03:15:42.038Z","updated":"2021-12-12T03:15:42.038Z","path":"Works/index.html","_id":"ckx2p0yp30002ymuw62wf7oqg","comments":1,"layout":"page","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><p>Work0</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><p>Work0</p>\n"},{"title":"About me","_content":"### 👨🏻‍🎓 EDUCATION\n\n**Nanjing University of Science and technology**\n\n- Bachelor of Automatic (Sept 2013-June 2017)\n- Master of Control Engineering (Sept 2017-June 2020)\n\n### 👨🏻‍💻 EMPLOYMENT\n\n**KE Holdings Inc. (贝壳找房)**                             May 2020 - Oct 2021\n\n- Online Learning System for Broker\n\n**Bilibili (哔哩哔哩弹幕网)**                                   Nov 2021 - now\n\n- Electronic Commerce System\n\n### 👨‍🚀 SOFTWARE PROJECT\n\n- [theme plugin of `StarUML`](https://github.com/NjustJiaweihan/Algorithms4)\n\n","source":"About/index.md","raw":"---\ntitle: About me\n---\n### 👨🏻‍🎓 EDUCATION\n\n**Nanjing University of Science and technology**\n\n- Bachelor of Automatic (Sept 2013-June 2017)\n- Master of Control Engineering (Sept 2017-June 2020)\n\n### 👨🏻‍💻 EMPLOYMENT\n\n**KE Holdings Inc. (贝壳找房)**                             May 2020 - Oct 2021\n\n- Online Learning System for Broker\n\n**Bilibili (哔哩哔哩弹幕网)**                                   Nov 2021 - now\n\n- Electronic Commerce System\n\n### 👨‍🚀 SOFTWARE PROJECT\n\n- [theme plugin of `StarUML`](https://github.com/NjustJiaweihan/Algorithms4)\n\n","date":"2021-12-12T09:05:06.715Z","updated":"2021-12-12T09:05:06.705Z","path":"About/index.html","_id":"ckx2p12730003ymuwddic2l09","comments":1,"layout":"page","content":"<h3 id=\"👨🏻‍🎓-EDUCATION\"><a href=\"#👨🏻‍🎓-EDUCATION\" class=\"headerlink\" title=\"👨🏻‍🎓 EDUCATION\"></a>👨🏻‍🎓 EDUCATION</h3><p><strong>Nanjing University of Science and technology</strong></p>\n<ul>\n<li>Bachelor of Automatic (Sept 2013-June 2017)</li>\n<li>Master of Control Engineering (Sept 2017-June 2020)</li>\n</ul>\n<h3 id=\"👨🏻‍💻-EMPLOYMENT\"><a href=\"#👨🏻‍💻-EMPLOYMENT\" class=\"headerlink\" title=\"👨🏻‍💻 EMPLOYMENT\"></a>👨🏻‍💻 EMPLOYMENT</h3><p><strong>KE Holdings Inc. (贝壳找房)</strong>                             May 2020 - Oct 2021</p>\n<ul>\n<li>Online Learning System for Broker</li>\n</ul>\n<p><strong>Bilibili (哔哩哔哩弹幕网)</strong>                                   Nov 2021 - now</p>\n<ul>\n<li>Electronic Commerce System</li>\n</ul>\n<h3 id=\"👨‍🚀-SOFTWARE-PROJECT\"><a href=\"#👨‍🚀-SOFTWARE-PROJECT\" class=\"headerlink\" title=\"👨‍🚀 SOFTWARE PROJECT\"></a>👨‍🚀 SOFTWARE PROJECT</h3><ul>\n<li><a href=\"https://github.com/NjustJiaweihan/Algorithms4\">theme plugin of <code>StarUML</code></a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"👨🏻‍🎓-EDUCATION\"><a href=\"#👨🏻‍🎓-EDUCATION\" class=\"headerlink\" title=\"👨🏻‍🎓 EDUCATION\"></a>👨🏻‍🎓 EDUCATION</h3><p><strong>Nanjing University of Science and technology</strong></p>\n<ul>\n<li>Bachelor of Automatic (Sept 2013-June 2017)</li>\n<li>Master of Control Engineering (Sept 2017-June 2020)</li>\n</ul>\n<h3 id=\"👨🏻‍💻-EMPLOYMENT\"><a href=\"#👨🏻‍💻-EMPLOYMENT\" class=\"headerlink\" title=\"👨🏻‍💻 EMPLOYMENT\"></a>👨🏻‍💻 EMPLOYMENT</h3><p><strong>KE Holdings Inc. (贝壳找房)</strong>                             May 2020 - Oct 2021</p>\n<ul>\n<li>Online Learning System for Broker</li>\n</ul>\n<p><strong>Bilibili (哔哩哔哩弹幕网)</strong>                                   Nov 2021 - now</p>\n<ul>\n<li>Electronic Commerce System</li>\n</ul>\n<h3 id=\"👨‍🚀-SOFTWARE-PROJECT\"><a href=\"#👨‍🚀-SOFTWARE-PROJECT\" class=\"headerlink\" title=\"👨‍🚀 SOFTWARE PROJECT\"></a>👨‍🚀 SOFTWARE PROJECT</h3><ul>\n<li><a href=\"https://github.com/NjustJiaweihan/Algorithms4\">theme plugin of <code>StarUML</code></a></li>\n</ul>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-11-30T15:02:46.723Z","updated":"2021-11-30T15:02:46.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx2oygh40001wwuwco0ah5kp","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"springboot中配置druid数据库连接池","date":"2021-12-02T09:41:28.000Z","_content":"\n`Druid`是数据库线程池的一种实现，还提供一些监控和扩展能力。\n\n<!-- more -->\n\n## 配置\n","source":"_posts/springboot-druid.md","raw":"---\ntitle: springboot中配置druid数据库连接池\ndate: 2021-12-02 17:41:28\ntags: springboot\n---\n\n`Druid`是数据库线程池的一种实现，还提供一些监控和扩展能力。\n\n<!-- more -->\n\n## 配置\n","slug":"springboot-druid","published":1,"updated":"2021-12-02T14:42:35.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx2oygh80003wwuw5qdq22lj","content":"<p><code>Druid</code>是数据库线程池的一种实现，还提供一些监控和扩展能力。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2>","site":{"data":{}},"excerpt":"<p><code>Druid</code>是数据库线程池的一种实现，还提供一些监控和扩展能力。</p>","more":"<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2>"},{"title":"mock-consumer-helper工具包","date":"2021-12-11T14:38:48.000Z","_content":"\n跨团队合作时因为排期不同，往往需要先mock外部接口。如果项目用DDD的代码结构的话，调用外部接口的consumer类一般放在防腐层，接口的成功/失败情况都需要mock，对于失败情况需要记录日志、重试等操作，而这些代码在内部开发阶段往往重复性很高。于是有了这个`mock-consumer-helper`工具包。\n\n<!--more-->\n\n## consumer interface\n\nApi接口负责调用外部接口，并对其返回值做处理；Consumer接口记录日志、重试等通用操作。\n\n```java\npublic interface Consumer<T, S>{\n  \n  @Autowire\n  private Api<T, S> api;\n\n  /**\n   * 打日志，重试等默认操作\n   */\n  default T consumer(S s){\n    T t = api.query(s);\n  }\n}\n```\n\n```java\npublic class Api<T, S>{\n   /**\n   * 封装外部API的接口\n   */\n  T query(S s);\n}\n```\n\n## @MockConsumer\n\n注解的参数是mock接口的成功概率，用于模拟接口的成功/失败两种情况。\n\n```java\n@Documented\n@Retation(RetationPolicy.RUNTIME)\n@Target(ElementType.Method)\npublic @interface MockConsumer{\n  // mock的接口的成功概率\n  String value() default \"0.5\";\n}\n```\n\n```java\n@Aspect\n@Component\npublic class MockConsumerAspect{\n  \n  /**\n   * mock接口使用 概率失败\n   */\n  @Around(\"@annotation(mockConsumer)\")\n  public Object around(ProcessJointPoint joinPoint, MockConsumer mockConsumer){\n    boolean flag = Math.random() >= Double.parseDouble(mockConsumer.value());\n    if(flag){\n      throw new RuntimeException(\"MockConsumer ==>> decide fail\")\n    }\n    \n    Object proceed = null;\n    try{\n      proceed = joinPoint.preoceed();\n    } catch (Throwable throwable){\n      throwable.printStackTrace();\n    }\n    \n    return proceed;\n  }\n}\n```\n\n## use case\n\nTodo\n","source":"_posts/mock-consumer-helper.md","raw":"---\ntitle: mock-consumer-helper工具包\ndate: 2021-12-11 22:38:48\ntags: DIY\n---\n\n跨团队合作时因为排期不同，往往需要先mock外部接口。如果项目用DDD的代码结构的话，调用外部接口的consumer类一般放在防腐层，接口的成功/失败情况都需要mock，对于失败情况需要记录日志、重试等操作，而这些代码在内部开发阶段往往重复性很高。于是有了这个`mock-consumer-helper`工具包。\n\n<!--more-->\n\n## consumer interface\n\nApi接口负责调用外部接口，并对其返回值做处理；Consumer接口记录日志、重试等通用操作。\n\n```java\npublic interface Consumer<T, S>{\n  \n  @Autowire\n  private Api<T, S> api;\n\n  /**\n   * 打日志，重试等默认操作\n   */\n  default T consumer(S s){\n    T t = api.query(s);\n  }\n}\n```\n\n```java\npublic class Api<T, S>{\n   /**\n   * 封装外部API的接口\n   */\n  T query(S s);\n}\n```\n\n## @MockConsumer\n\n注解的参数是mock接口的成功概率，用于模拟接口的成功/失败两种情况。\n\n```java\n@Documented\n@Retation(RetationPolicy.RUNTIME)\n@Target(ElementType.Method)\npublic @interface MockConsumer{\n  // mock的接口的成功概率\n  String value() default \"0.5\";\n}\n```\n\n```java\n@Aspect\n@Component\npublic class MockConsumerAspect{\n  \n  /**\n   * mock接口使用 概率失败\n   */\n  @Around(\"@annotation(mockConsumer)\")\n  public Object around(ProcessJointPoint joinPoint, MockConsumer mockConsumer){\n    boolean flag = Math.random() >= Double.parseDouble(mockConsumer.value());\n    if(flag){\n      throw new RuntimeException(\"MockConsumer ==>> decide fail\")\n    }\n    \n    Object proceed = null;\n    try{\n      proceed = joinPoint.preoceed();\n    } catch (Throwable throwable){\n      throwable.printStackTrace();\n    }\n    \n    return proceed;\n  }\n}\n```\n\n## use case\n\nTodo\n","slug":"mock-consumer-helper","published":1,"updated":"2021-12-11T15:53:14.181Z","_id":"ckx2p0k1z0000ymuw0i1u32tc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>跨团队合作时因为排期不同，往往需要先mock外部接口。如果项目用DDD的代码结构的话，调用外部接口的consumer类一般放在防腐层，接口的成功/失败情况都需要mock，对于失败情况需要记录日志、重试等操作，而这些代码在内部开发阶段往往重复性很高。于是有了这个<code>mock-consumer-helper</code>工具包。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"consumer-interface\"><a href=\"#consumer-interface\" class=\"headerlink\" title=\"consumer interface\"></a>consumer interface</h2><p>Api接口负责调用外部接口，并对其返回值做处理；Consumer接口记录日志、重试等通用操作。</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Consumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span>\n  \n  <span class=\"token annotation punctuation\">@Autowire</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Api</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span> api<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * 打日志，重试等默认操作\n   */</span>\n  <span class=\"token keyword\">default</span> <span class=\"token class-name\">T</span> <span class=\"token function\">consumer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">T</span> t <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Api</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">/**\n   * 封装外部API的接口\n   */</span>\n  <span class=\"token class-name\">T</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"MockConsumer\"><a href=\"#MockConsumer\" class=\"headerlink\" title=\"@MockConsumer\"></a>@MockConsumer</h2><p>注解的参数是mock接口的成功概率，用于模拟接口的成功/失败两种情况。</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Retation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetationPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType<span class=\"token punctuation\">.</span>Method</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">MockConsumer</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// mock的接口的成功概率</span>\n  <span class=\"token class-name\">String</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"0.5\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Aspect</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MockConsumerAspect</span><span class=\"token punctuation\">&#123;</span>\n  \n  <span class=\"token comment\">/**\n   * mock接口使用 概率失败\n   */</span>\n  <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@annotation(mockConsumer)\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProcessJointPoint</span> joinPoint<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MockConsumer</span> mockConsumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>mockConsumer<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MockConsumer ==>> decide fail\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token class-name\">Object</span> proceed <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n      proceed <span class=\"token operator\">=</span> joinPoint<span class=\"token punctuation\">.</span><span class=\"token function\">preoceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      throwable<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">return</span> proceed<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"use-case\"><a href=\"#use-case\" class=\"headerlink\" title=\"use case\"></a>use case</h2><p>Todo</p>\n","site":{"data":{}},"excerpt":"<p>跨团队合作时因为排期不同，往往需要先mock外部接口。如果项目用DDD的代码结构的话，调用外部接口的consumer类一般放在防腐层，接口的成功/失败情况都需要mock，对于失败情况需要记录日志、重试等操作，而这些代码在内部开发阶段往往重复性很高。于是有了这个<code>mock-consumer-helper</code>工具包。</p>","more":"<h2 id=\"consumer-interface\"><a href=\"#consumer-interface\" class=\"headerlink\" title=\"consumer interface\"></a>consumer interface</h2><p>Api接口负责调用外部接口，并对其返回值做处理；Consumer接口记录日志、重试等通用操作。</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Consumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span>\n  \n  <span class=\"token annotation punctuation\">@Autowire</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Api</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span> api<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * 打日志，重试等默认操作\n   */</span>\n  <span class=\"token keyword\">default</span> <span class=\"token class-name\">T</span> <span class=\"token function\">consumer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">T</span> t <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Api</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">/**\n   * 封装外部API的接口\n   */</span>\n  <span class=\"token class-name\">T</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"MockConsumer\"><a href=\"#MockConsumer\" class=\"headerlink\" title=\"@MockConsumer\"></a>@MockConsumer</h2><p>注解的参数是mock接口的成功概率，用于模拟接口的成功/失败两种情况。</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Retation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetationPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType<span class=\"token punctuation\">.</span>Method</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">MockConsumer</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// mock的接口的成功概率</span>\n  <span class=\"token class-name\">String</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"0.5\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Aspect</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MockConsumerAspect</span><span class=\"token punctuation\">&#123;</span>\n  \n  <span class=\"token comment\">/**\n   * mock接口使用 概率失败\n   */</span>\n  <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@annotation(mockConsumer)\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProcessJointPoint</span> joinPoint<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MockConsumer</span> mockConsumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>mockConsumer<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MockConsumer ==>> decide fail\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token class-name\">Object</span> proceed <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n      proceed <span class=\"token operator\">=</span> joinPoint<span class=\"token punctuation\">.</span><span class=\"token function\">preoceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      throwable<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">return</span> proceed<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"use-case\"><a href=\"#use-case\" class=\"headerlink\" title=\"use case\"></a>use case</h2><p>Todo</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckx2oygh80003wwuw5qdq22lj","tag_id":"ckx2oygha0005wwuw4v1f4uqf","_id":"ckx2oyghc0007wwuw4kpx9p2n"},{"post_id":"ckx2p0k1z0000ymuw0i1u32tc","tag_id":"ckx2oyghc0006wwuwdf5p28wt","_id":"ckx2p0k210001ymuwfbpkgrnn"}],"Tag":[{"name":"springboot","_id":"ckx2oygha0005wwuw4v1f4uqf"},{"name":"DIY","_id":"ckx2oyghc0006wwuwdf5p28wt"}]}}